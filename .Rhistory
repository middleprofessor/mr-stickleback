library(readxl)
library(lme4)
library(ggplot2)
library(data.table)
source("../R/replicate.R") # for knit, drop the "../" for console
library(readxl)
library(lme4)
library(ggplot2)
library(data.table)
source("../R/replicate.R") # for knit, drop the "../" for console
source("../R/mendelian_randomization.R") # for knit, drop the "../" for console
dir_path <- "data/" # for console
dir_path <- "../data/" # for knit
file_name <- "Rennison-am_nat-2016.txt"
file_path <- paste(dir_path, file_name, sep='')
rennison <- data.table(fread(file_path))
dir_path <- "data/" # for console
dir_path <- "../data/" # for knit
file_name <- "Rennison et al archive.csv"
file_path <- paste(dir_path, file_name, sep='')
rennison <- data.table(fread(file_path))
rennison[, month:=factor(month, c('06-Sep', '06-Oct', '06-Nov'))]
rennison[, genotype:=factor(genotype)]
rennison
fit <- lm(raw.logplates ~ length*genotype, data=rennison[length < 34.0,])
# # residuals for all data (not just length <= 34)
# rennison[, logplates.resid:=raw.logplates - predict(fit, data.frame(length=length, genotype=genotype))]
# # predicted value for all data at length=34.0 mm
# rennison[, logplat.hat34:=predict(fit, data.frame(length=34.0, genotype=genotype))]
# # adjusted values
# rennison[, logplates.s2b:=ifelse(length <= 34, logplat.hat34 + logplates.resid, raw.logplates)]
# if length < 34.0 mm then value is predicted value at length=34 (conditional on genotype) plus residual value (conditional on length*genotype)
rennison[, adj.logplates_rep2:=ifelse(length < 34,
predict(fit, data.frame(length=34.0, genotype=genotype)) +
raw.logplates - predict(fit, data.frame(length=length, genotype=genotype)),
raw.logplates)]
# limit adjusted plates to max of log(32)
rennison[, adj.logplates_rep2:=ifelse(adj.logplates_rep2 > log(32), log(32), adj.logplates_rep2)]
